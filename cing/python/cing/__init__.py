import os
import sys

# Molecule related stuff (former NTmol)
#from constants      import *

cingVersion     = '0.72 alfa'
programName     = 'CING'
programVersion  = cingVersion

header = """
======================================================================================================
| CING: Common Interface for NMR structure Generation version %-17s AW,JFD,GWV 2004-2008 |
======================================================================================================
""" % (cingVersion,)
footer = """------------------------------------------------------------------------------------------------------
"""


verbosityNothing  = 0 # Even errors will be suppressed
verbosityError    = 1 # show only errors
verbosityWarning  = 2 # show errors and warnings
verbosityOutput   = 3 # and regular output DEFAULT 
verbosityDetail   = 4 # show more details
verbosityDebug    = 9 # add debugging info (not recommended for casual user)  
"""How much text is printed to stdout/sstderr streams
Reference to it as cing.verbosity if you want to see non-default behavior
"""
verbosity = verbosityOutput
prefixError     = "ERROR:"
prefixWarning   = "WARNING:"
prefixDetail    = "DETAIL:"
prefixDebug     = "DEBUG:"

#if verbosity >= verbosityOutput:
#  sys.stdout.write(header)

######################################################################################################
# This code is repeated in __init__.py and setup.py please keep it sync-ed
cingPythonCingDir = os.path.split(__file__)[0]
# The path to add to your PYTHONPATH thru the settings script generated by cing.core.setup.py
cingPythonDir = os.path.split(cingPythonCingDir)[0]
# Now a very important variable used through out the code. Even though the
# environment variable CINGROOT is defined the same this is the prefered 
# source for the info within the CING python code.
cingRoot = os.path.split(cingPythonDir)[0]
#printDebug("cingRoot        : " + cingRoot)
######################################################################################################
cingDirTests       = os.path.join(cingRoot,         "Tests")
cingDirTestsData   = os.path.join(cingDirTests,     "data")
cingDirTestsTmp    = os.path.join(cingDirTestsData, "tmp")
cingDirCsh         = os.path.join(cingRoot,         "csh")
cingDirTmp         = os.path.join("/tmp" , "cing")
if not os.path.exists(cingDirTmp):
    if os.mkdir(cingDirTmp):
        print("ERROR: Failed to create a temporary dir for cing at: " + cingDirTmp)
        sys.exit(1)

# Define some we are used to use from the toplevel Cing api
# dont move these to the top as they become circular.
# The order within this list is important too. For one thing, pydev extensions code analysis can't
# track imports well if not correct.
#from cing.Libs.NTutils import NTlist
#from cing.Libs.NTutils import NTdict
from cing.core.classes import *
from cing.core.parameters import * 
from cing.core.database import NTdb
from cing.core.dictionaries import *
from cing.core.molecule import *
from cing.core.importPlugin import importPlugin # This imports all plugins
from cing.Libs.peirceTest import peirceTest
#from cing.Libs.TypeChecking import *
